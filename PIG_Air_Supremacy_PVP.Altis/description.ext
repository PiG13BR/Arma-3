/*
	General
*/

// Gametype and min/max players
class Header
{
	gameType = "TDM";	// Game type
	minPlayers =  1;	// minimum number of players the mission supports
	maxPlayers = 10;	// maximum number of players the mission supports
};

// Name of Mission author(s) and contributors. Obviously you can only add and not (!) remove someone.
author = "PiG13BR";

// Mission name displayed in the mission selection menu.
briefingName = $STR_TITLE_MISSION;

// Text to be displayed below the overviewPicture on the mission selection screen
overviewText = "github.com/PiG13BR";

// Path to image which will be displayed when the mission is highlighted on the mission selection screen.
// Image should be .paa format and in 2:1 aspect ratio – ideally 1024x512 (Arma 3).
overviewPicture = "images\AS.paa";

// String (usually mission name) shown during mission loading.
// The string is shown in a slightly larger font above the loadScreen.
onLoadName = $STR_TITLE_MISSION;

// Displays a message while the mission is loading below the loadScreen picture.
onLoadMission = "Um cenário de PVP personalizado";

// You can define a picture to be shown while the mission is loaded.
// The path is relative to the mission folder.
loadScreen = "images\AS.paa";

/*
	Respawn
*/
// Type of Respawn (Default 0 in SP, 1 in MP)
// 0    "NONE"      No respawn
// 1    "BIRD"      Respawn as a seagull
// 2    "INSTANT"   Respawn just where you died.
// 3    "BASE"      Respawn in base. A respawn marker is needed.
// 4    "GROUP"     Respawn in your group. If there is no remaining AI, you will become a seagull.
// 5    "SIDE"      Introduced with Armed Assault version 1.08 Respawn into an AI unit on your side (if there's no AI left, you'll become a seagull).
respawn = 3;

// Set respawn delay in seconds.
respawnDelay = 10;

// Templates are pre-defined scripts called when player dies and respawns. They are defined in an array and can be combined together.
// List of pre-defined variants: https://community.bistudio.com/wiki/Arma_3_Respawn#Official_Templates
respawnTemplatesindependent[] = { "Tickets" };
respawnTemplatesEast[] = { "Tickets" };

// Show the scoreboard and respawn countdown timer for a player if he is killed with respawn type BASE.
respawnDialog = 1;

/*
	-1 - Dont respawn on start. Don't run respawn script on start.
	0 - Dont respawn on start. Run respawn script on start.
	1 - Respawn on start. Run respawn script on start.
*/
respawnOnStart = 0;

/*
    ----- Mission Settings -----
*/

// Allows access to the Debug Console outside of the editor during normal gameplay.
// 0 - Default behavior, available only in editor
// 1 - Available in SP and for hosts / logged in admins
// 2 - Available for everyone
enableDebugConsole = 1;

// Multiplayer setting that removes all playable units which do not have a human player.
// When AI is disabled, a player logging out will not have AI take control of his character.
disabledAI = 1;

// When enabled, joining player will join the mission bypassing role selection screen.
// The joinUnassigned param will be set to 1 automatically, so that player receives 1st available role from mission template.
// When leaving such mission, player will go straight back to server browser.
skipLobby = 0;

// Disables randomization on certain objects, object types or object kinds in the mission.
disableRandomization[] = {};

// Disable specific channels for voice and text communication.
// MOTD and admin say have exception and will show in global.
// 0 Global, 1 Side, 2 Command, 3 Group, 4 Vehicle, 5 Direct, 6 System
disableChannels[] = {0, 5};

// Enable or disable availability of createVehicleLocal
unsafeCVL = 1;

/*
	Functions
*/
class CfgFunctions
{
	class PIG
	{
		class functions {
			file = "functions";

			class addActionsPlayer {};
			class autoCleaner {};
			class checkPlayerHeight {};
			class cameraAngle {};
			//class createAA {};
			class createRRR {};
			class curatorRegisterObjects {};
			class fakeArtyFire {};
			class jetMenu {};
			class manageWeather {};
			//class registerAA {};
			class repairRearmRefuel {};
			class safeSpawn {};
			class safeZone {};
			class setViewDistance {};
			class spawnJet {};
			class timeMultiplier {};
		}
		class objectives {
			file = "functions\objectives";

			class airControlObjective {};
			class artyObjective {};
			class convoyObjective {};
			class createTask {};
			class getAirControlMarkers {};
			class getArtyMarkers {};
			class huntObjective {};
			class manageTimer {};
			class selectTask {};
		}

	};
};

// User Interface
#include "ui\AS_defines.hpp"
#include "ui\AS_jet_menu.hpp"
#include "ui\AS_viewDistance_menu.hpp"
#include "ui\AS_timer_overlay.hpp"

// Mission params
#include "mission_params.hpp"

// Task Description
class CfgTaskDescriptions
{
	class airControlTask
	{
		title		= "Controle o espaço aéreo";
		description	= "Seu time deve estar em maior quantidade dentro da área demarcada até o tempo acabar.<br/><br/>Time perdedor perde <t color='#ff0000'>10 tickets</t>.";
		marker		= "";
	};
	class convoyDefendTask
	{
		title		= "Defenda o comboio";			// note the lack of $ sign here!
		description	= "O inimigo vai tentar destruir nosso combio, defenda-o a todo custo!<br/><br/>Não realizando isso, seu time perderá <t color='#ff0000'>10 tickets</t>.";		// without $, it translates for each client
		marker		= "";			// with $ everyone sees the server's language
	};
	class convoyAttackTask
	{
		title		= "Destrua o comboio";
		description	= "Destrua o comboio inimigo antes que chegue ao destino. Caso o comboio for destruido, o time defensor perderá <t color='#ff0000'>10 tickets</t>.";
		marker		= "";
	};
	class huntDefendTask
	{
		title		= "Defenda seu companheiro";			
		description	= "Um dos membros do seu time é alvo prioritário. Defendá-o até o tempo acabar.<br/><br/>Se for abatido antes do tempo acabar, seu time perderá <t color='#ff0000'>5 tickets</t>.";		// without $, it translates for each client
		marker		= "";
	};
	class huntAttackTask
	{
		title		= "Elimine o alvo prioritário";
		description	= "Um alvo importante está voando sobre a AO, elimine-o antes que o tempo acabe.<br/><br/>Isso irá custar <t color='#ff0000'>5 tickets</t> para o time oposto";
		marker		= "";
	};
	class parent_artyDefendTask
	{
		title		= "Defenda as artilharias aliadas";			
		description	= "Nossos aliados instalaram posições de artilharia. Defendê-las até que o tempo acabe.<br/><br/>Cada artilharia vale 3 tickets. Preserve todas elas para garantir que seu inimigo perda mais tickets.";		
		marker		= "";
	};
	class parent_artyAttackTask
	{
		title		= "Ataque as artilharias inimigas";
		description	= "Os inimigos instalaram posições de artilharia. Localize-as e as destrua antes que o tempo acabe.<br/><br/>Cada artilharia destruida custará 3 tickets para o time inimigo.";
		marker		= "";
	};
};

#include "cfgDebriefing.hpp"